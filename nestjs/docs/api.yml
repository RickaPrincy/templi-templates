openapi: 3.0.0
paths:
  /ping:
    get:
      operationId: ping
      parameters: []
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: ''
      summary: ''
      tags:
        - Health
  /dummies:
    get:
      operationId: getDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Health
  /users:
    get:
      operationId: getUsers
      parameters:
        - name: username
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - User
  /whoami:
    get:
      description: Tell who you are
      operationId: whoami
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Security
  /signin:
    post:
      operationId: signin
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
  /signup:
    post:
      operationId: signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
info:
  title: App Api
  description: App
  version: 0.0.1
  contact: {}
tags:
  - name: Health
    description: ''
  - name: User
    description: ''
  - name: Security
    description: ''
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Dummy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ApiResponseError:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - SIMPLE_USER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - username
        - role
        - createdAt
        - updatedAt
    Whoami:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - SIMPLE_USER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        token:
          type: string
      required:
        - id
        - username
        - role
        - createdAt
        - updatedAt
        - token
    SigninPayload:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
      required:
        - password
        - username
    SignupPayload:
      type: object
      properties:
        id:
          type: string
        password:
          type: string
        username:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - SIMPLE_USER
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - password
        - username
        - role
        - createdAt
        - updatedAt
